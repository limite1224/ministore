<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-autowire="byName">
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:com.properties</value>
			</list>
		</property>
	</bean>
	<!-- 主库配置 -->
	<bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${master.driver}" />
		<property name="jdbcUrl" value="${master.url}" />
		<property name="user" value="${master.username}" />
		<property name="password" value="${master.password}" />
		<property name="maxPoolSize" value="${master.maxPoolSize}" />
		<!--  <property name="minPoolSize" value="${master.minPoolSize}" />-->
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<!--<property name="maxStatements" value="${maxStatements}" />
		<property name="checkoutTimeout" value="${checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}" />-->
		<!-- 副库配置 -->
	</bean>
	<bean id="slaveDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${slave.driver}" />
		<property name="jdbcUrl" value="${slave.url}" />
		<property name="user" value="${slave.username}" />
		<property name="password" value="${slave.password}" />
		<property name="maxPoolSize" value="${slave.maxPoolSize}" />
		<!--<property name="minPoolSize" value="${slave.minPoolSize}" />-->
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<!--<property name="maxStatements" value="${maxStatements}" />
		<property name="checkoutTimeout" value="${checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}" />-->
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="dataSource" class="com.sls.core.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="masterDataSource" />
				<entry key="slave" value-ref="slaveDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!--<context:component-scan base-package="com.ekhui"> <context:include-filter 
		type="regex" expression=".core.socket.Server" /> </context:component-scan> -->
	<!--扫描包 -->
	<context:component-scan base-package="com.leshun.plc">
		<context:include-filter type="regex"
			expression=".dao.*" />
		<context:include-filter type="regex"
			expression=".service.*" />
		<context:include-filter type="regex"
			expression=".comp.*" />
	</context:component-scan>

	<bean id="dataSourceAdvice" class="com.sls.core.datasource.DataSourceAdvice">
		<property name="methods">
			<list value-type="java.lang.String">
				<value>find</value>
				<value>query</value>
				<value>list</value>
				<value>export</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* com.leshun.plc.web.db.service.*.*.*(..))" />
		<aop:advisor advice-ref="dataSourceAdvice" pointcut-ref="interceptorPointCuts" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
	</aop:config>

	<!-- 缓存配置 -->
	<bean id="memcachedPool" class="com.whalin.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>${memcache.server}</value>
			</list>
		</property>
		<property name="initConn">
			<value>20</value>
		</property>
		<property name="minConn">
			<value>10</value>
		</property>
		<property name="maxConn">
			<value>50</value>
		</property>
		<property name="maintSleep">
			<value>30</value>
		</property>
		<property name="nagle">
			<value>false</value>
		</property>
		<property name="socketTO">
			<value>3000</value>
		</property>
	</bean>

	<bean id="memcachedClient" class="com.whalin.MemCached.MemCachedClient">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
	</bean>
	<context:component-scan base-package="com.leshun.ebike">
		<context:include-filter type="regex"
			expression=".action.*" />
		<context:include-filter type="regex"
			expression=".freemarker.*" />
	</context:component-scan>
</beans>
